@model PaginatedList<CsvDocumentWebViewer.Services.ModelsView.ProductView>
@{
    ViewData["Title"] = "Index";
}


<p>
    <h1>Products</h1>
</p>


<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by name: <input type="text" name="productName" value="@ViewData["NameFilter"]" />
            <input type="submit" value="Search" class="btn btn-primary" /> <h7>|</h7>
            <a asp-action="Index">Back to Full List</a> 
             @if (User.IsInRole("admin"))
             {
               <h7>|</h7> <a asp-action="Create">Create New</a>
             }
        </p>
    </div>
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                Product Name     
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.ProductName)
                </td>
                <td>
                    <a asp-action="Details" asp-route-id="@item.ProductId">Details</a> 
                     @if (User.IsInRole("admin"))
                     {
                       <h7>|</h7> <a asp-action="Edit" asp-route-id="@item.ProductId">Edit</a> 
                       <h7>|</h7> <a asp-action="Delete" asp-route-id="@item.ProductId">Delete</a>
                     }
                </td>
            </tr>
        }
    </tbody>
</table>
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["NameFilter"]"
   class="btn btn-primary @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["NameFilter"]"
   class="btn btn-primary @nextDisabled">
    Next
</a>
